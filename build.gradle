plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.springdoc.openapi-gradle-plugin" version '1.7.0'
}

group = 'com.pw'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.security:spring-security-oauth2-jose:6.1.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

openApi {
	apiDocsUrl.set("http://localhost:8080/api-docs")
	outputDir.set(file("$buildDir/openapi"))
	outputFileName.set("time-planner-server-openapi.json")
	waitTimeInSeconds.set(10)
/*
	groupedApiMappings.set(["https://localhost:8080/v3/api-docs/groupA" to "swagger-groupA.json",
							"https://localhost:8080/v3/api-docs/groupB" to "swagger-groupB.json"])
*/
	/*customBootRun {
		args.set(["--spring.profiles.active=special"])
	}*/
}

tasks.named('test') {
	useJUnitPlatform()
}
